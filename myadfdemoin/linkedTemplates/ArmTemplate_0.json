{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "myadfdemoin"
		},
		"AzureBlobStorage_Input_Product_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage_Input_Product'"
		},
		"AzureFunction_Input_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'AzureFunction_Input'"
		},
		"AzureFunction_Input_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://adffuncappdemo.azurewebsites.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage_Input_Product')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage_Input_Product_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFunction_Input')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('AzureFunction_Input_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('AzureFunction_Input_functionKey')]"
					},
					"authentication": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProductJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_Input_Product",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "products.json",
						"container": "adftriggerdemo"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"Products": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"ProductId": {
										"type": "integer"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_Input_Product')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/On Blob Trigger')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Product LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ProductJson",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set Input Params",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Product LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "AzInputParams",
							"value": {
								"value": "@activity('Product LookUp').output.value[0].Products",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Invoke Azure Function for Business Logic",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "Set JSON",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "FunctionAPI",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@variables('AzJsonParams')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureFunction_Input",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set JSON",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Input Params",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "AzJsonParams",
							"value": {
								"value": "@concat('\n{\"Products\":[',\njoin(variables('AzInputParams'),\n ','),']}')",
								"type": "Expression"
							}
						}
					}
				],
				"variables": {
					"AzInputParams": {
						"type": "Array"
					},
					"AzJsonParams": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ProductJson')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureFunction_Input')]"
			]
		}
	]
}